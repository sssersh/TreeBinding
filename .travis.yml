sudo: required
language: cpp

env:
  global:
    # Ubuntu version
    - LINUX_DIST=bionic
    - DEPS_DIR=${TRAVIS_BUILD_DIR}/deps
    # Global build options and C++ flags
    # Misc
    - RUN_TESTS=true
    - COVERAGE=false

cache:
  directories:
    - ${DEPS_DIR}

matrix:
  include:
    # Linux {

    - os: linux
      compiler: g++
      addons:
        apt:
          packages:
            - gcc-7
            - g++-7
            - valgrind
            - python-yaml
      env: BUILD_TYPE=Release

    - os: linux
      compiler: g++
      addons:
        apt:
          packages:
            - gcc-7
            - g++-7
            - valgrind
            - python-yaml
      env: BUILD_TYPE=Debug

    - os: linux
      compiler: g++
      addons:
        apt:
          packages:
            - gcc-7
            - g++-7
            - valgrind
            - python-yaml
            - lcov
      env: BUILD_TYPE=Coverage

    - os: linux
      compiler: clang
      env: BUILD_TYPE=Release

    - os: linux
      compiler: clang
      env: BUILD_TYPE=Debug

    # }

    # OSX {

      # - os: osx
      # env: BUILD_TYPE=Release TOOLCHAIN=libcxx

      # - os: osx
      # env: BUILD_TYPE=Debug TOOLCHAIN=libcxx

    # }

install:
  - |
    if [[ ${TRAVIS_OS_NAME} == "linux" ]]; then

      echo ${PATH}
      echo ${CXX}
      ${CXX} --version
      ${CXX} -v

      # Download and install recent cmake
      CMAKE_URL="https://github.com/Kitware/CMake/releases/download/v3.20.2/cmake-3.20.2-linux-x86_64.tar.gz"
      mkdir -p ${DEPS_DIR}/cmake
      travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C ${DEPS_DIR}/cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}

      # Install conan
      sudo apt update
      sudo apt install python3
      sudo apt install python3-pip
      sudo apt-get install python3-setuptools
      sudo python3 -m pip install -U conan

      sudo pip install codecov

      # Sets libcxx to C++11 ABI
      conan profile new default --detect
      conan profile update settings.compiler.libcxx=libstdc++11 default  
    fi

before_script:
  - rm -rf build
  - mkdir build
  - cd build

script:
  - cmake ${CMAKE_OPTIONS} -DCMAKE_CXX_FLAGS=${CXX_FLAGS} -DCMAKE_CXX_COMPILER=${CXX} -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DBUILD_TESTS=ON ..
  - make -j
  - ctest

notifications:
  email: false